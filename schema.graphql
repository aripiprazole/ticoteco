"""The `Upload` scalar type represents a file upload."""
scalar Upload

type Query {
  """Get the current logged user"""
  me: User

  """Get for you post connection"""
  forYou(
    """Returns the items in the list that come after the specified cursor."""
    after: String

    """Returns the first n items from the list."""
    first: Int

    """Returns the items in the list that come before the specified cursor."""
    before: String

    """Returns the last n items from the list."""
    last: Int
  ): PostConnection
}

type User {
  id: String!
  profile: Profile!
}

type Profile {
  id: String!
  avatar: String!
  username: String!
  displayName: String!
}

"""A connection to a list of items."""
type PostConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PostEdge]
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""An edge in a connection."""
type PostEdge {
  """The item at the end of the edge"""
  node: Post

  """A cursor for use in pagination"""
  cursor: String!
}

type Post {
  id: String!
  title: String!
  description: String!
  video: String!
  preview: String!
  profile: Profile!
}

type Mutation {
  createPost(input: CreatePostInput!): CreatePostPayload
}

type CreatePostPayload {
  post: Post
  clientMutationId: String
}

input CreatePostInput {
  title: String!
  description: String!
  video: Upload
  clientMutationId: String
}